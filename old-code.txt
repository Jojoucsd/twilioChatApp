function twCall(inputNum, res) {
	client.calls.create({
		to: inputNum,
		from: "+16504168665",
		url: "http://demo.twilio.com/docs/voice.xml",
		applicationSid: "APa894ccc18916d5496c35bbe7bd7f07bc",
		method: "GET",
		fallbackMethod: "GET",
		statusCallbackMethod: "GET",
		record: "false"
	}, function(err, call) {
		if (err) return console.error(err);
		console.log(call.sid);
		res.render('food', {
			title: "twCall",
			message: "Call Section ID: " + call.sid,
			bravo: "Finish twCall"
		})
	});
};


// http.createServer(function (req, res) {
// 	var twiml = new twilio.TwimlResponse();
// 	twiml.message("Thanks for the text");
// 	res.writeHead(200, {'Content-Type': 'text/xml'})
// 	res.end(twiml.toString());
// })


  <div class="jumbotron bpe-jumbotron">
    <div class="container">
    </div>
  </div>

      <div class="row">
        <div class="col-md-8 col-md-offset-2">
          <h1>Log-In</h1>
        </div>
        <div class="col-md-4 col-md-offset-4">
          <form class="form" role="form" id="post">
            <div class="form-group">
              <label for="text">Username :</label>
              <input type="text" id="username" class="form-control" placeholder="username" required autofocus>
            </div>
            <div class="form-group">
              <label for="text area">Password :</label>
              <input class="form-control" id="password" placeholder="password" required></input>    
            </div>
            <button class="btn btn-success btn-block" type="submit" data-toggle="tooltip" data-placement="bottom" title="Update To-Do list">Log-In password</button>
          </form>
        </div>
      </div>

        // var resp = new client.TwimlResponse();
        // resp.message('Thanks for the message, an agent will get back to you shortly.');
        // res.writeHead(200, {
        //  'Content-Type':'text/xml'
        // });
        // res.end(resp.toString());
        // // configuring Twilio response from user texting my Twilio number
        // var resp = new twilio.TwimlResponse();

        // resp.say('Welcome to Twilio!');
        // resp.say('Please let us know if we can help during your development.', {
        //  voice:'woman',
        //  language:'en-gb'
        // });

        // console.log(resp.toString());
        // var texts = twTextRec();
        // res.json(texts);
        // res.send(resp);
        // http.createServer(function (req, res) {
        //  var twiml = new twilio.TwimlResponse();
        //  twiml.message("Thanks for the text");
        //  res.writeHead(200, {'Content-Type': 'text/xml'})
        //  console.log(twiml);
        //  res.end(twiml.toString());
        // })
      // client.messages.list({    
      // }, function(err, data) { 
      //  data.messages.forEach(function(message) { 
      //    console.log(message.friendlyName); 
      //  }); 
      // });

      function twTextRec(url, res){
        // this gets a single message
        client.messages("SMef52737a542e41bc9dbd7d13fee926fa").get(function(err, message) {
          console.log(message.body);
        });
        // this is for getting all of the messages
        // client.messages.list(function(err, data){
        //  data.messages.forEach(function(message){
        //    console.log(message.body);
        //    res.send(data);
        //  });
        // });
      }
      <ul class="list-group" id="chats-ul">
      <% for (var i=0; i<chats.length; i++) { %>
        <li class="list-group-item">
          <h4 class="list-group-item-heading"><%= chats[i].name %></h4>
          <span class='list-group-item-text'><%= chats[i].number %></span>
            <button data-id="<%=chats[i].id %>" type='button' class='close' aria-label='Close'><span aria-hidden='true'>&times;</span></button>
        </li>
      <% } %>
      </ul>
            <input type="hidden" data-id="<%= user._id %>">
              $(document).on('click', 'button.close', function(e){
              deleteConversation(this);
            });
            function deleteConversation(context) {
              console.log('context in deleteConversation: ', context);
              // context is the button that was clicked
              var conversationId = $(context).data().id;
              $.ajax({
                //change url
                url: '/chats/:id' + conversationId,
                type: 'DELETE',
                success: function(response) {
                  // once successful, remove food from the DOM
                  $(context).closest('li').remove();
                }
              });
            }
            app.all('/call', function callWraper(req, res, next) {
              twCall(keyIn.number, res);
            });
            app.all('/text', function textWraper(req, res, next) {
              twText();
            });